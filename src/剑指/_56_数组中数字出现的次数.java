package 剑指;
//知耻而后勇，知弱而图强
//一个整型数组 nums 里除两个数字之外，其他数字都出现了两次。请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)。
//
//         
//
//        示例 1：
//
//        输入：nums = [4,1,4,6]
//        输出：[1,6] 或 [6,1]
//        示例 2：
//
//        输入：nums = [1,2,10,4,1,4,3,3]
//        输出：[2,10] 或 [10,2]
//         
//
//        限制：
//
//        2 <= nums.length <= 10000
public class _56_数组中数字出现的次数 {
    //两个相同的值异或结果为0，
    // 由题可知存在两个不相同的数字，因此所有数字进行异或之后的结果就是这两个不同数字异或的结果
    //只通过这两个数的异或结果还无法获取到这两个数，需要将他们分成不同的组进行异或
    public int[] singleNumbers(int[] nums) {
        //分组异或，三个变量分别存储个异或结果
        int num=0 ,a=0, b=0;
        for (int i : nums) {
            num^=i;
        }
        int mask=1;
        //找到异或结果的第一个1，用于分组
        while ((num&mask)==0){
            mask<<=1;
        }
        for (int i : nums) {
            if ((i&mask)==0){
                a^=i;
            }else {
                b^=i;
            }
        }
        return new int[]{a,b};
    }
}
